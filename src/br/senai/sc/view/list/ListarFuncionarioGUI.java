/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.senai.sc.view.list;

import br.senai.sc.controller.FuncionarioController;
import br.senai.sc.model.negocio.Funcionario;
import br.senai.sc.view.inserir.InserirFuncionarioGUI;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Patricia Gageir
 * @version 26/10/2013
 *
 */
public class ListarFuncionarioGUI extends javax.swing.JFrame {

    private JTable tabela;
    private DefaultTableModel modelo = new DefaultTableModel();

    public ListarFuncionarioGUI() {
        initComponents();
        criaJTable();
        scrollFuncionario.setViewportView(tabela);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollFuncionario = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txPesquisarFuncionario = new javax.swing.JTextField();
        btInserirFuncionario = new javax.swing.JButton();
        btExcluirFuncionario = new javax.swing.JButton();
        btEditarFuncionario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        scrollFuncionario.setViewportView(jLabel1);

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel2.setText("Pesquisar:  ");

        txPesquisarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txPesquisarFuncionarioActionPerformed(evt);
            }
        });

        btInserirFuncionario.setBackground(new java.awt.Color(255, 255, 255));
        btInserirFuncionario.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btInserirFuncionario.setText("Adicionar");
        btInserirFuncionario.setToolTipText("");
        btInserirFuncionario.setBorderPainted(false);
        btInserirFuncionario.setContentAreaFilled(false);
        btInserirFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInserirFuncionarioActionPerformed(evt);
            }
        });

        btExcluirFuncionario.setBackground(new java.awt.Color(255, 255, 255));
        btExcluirFuncionario.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btExcluirFuncionario.setText("Excluir");
        btExcluirFuncionario.setBorderPainted(false);
        btExcluirFuncionario.setContentAreaFilled(false);
        btExcluirFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirFuncionarioActionPerformed(evt);
            }
        });

        btEditarFuncionario.setBackground(new java.awt.Color(255, 255, 255));
        btEditarFuncionario.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btEditarFuncionario.setText("Editar");
        btEditarFuncionario.setToolTipText("");
        btEditarFuncionario.setBorderPainted(false);
        btEditarFuncionario.setContentAreaFilled(false);
        btEditarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarFuncionarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollFuncionario)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txPesquisarFuncionario))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 16, Short.MAX_VALUE)
                                .addComponent(btInserirFuncionario)
                                .addGap(567, 567, 567)
                                .addComponent(btEditarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btExcluirFuncionario)))
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txPesquisarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btInserirFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btExcluirFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEditarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btInserirFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInserirFuncionarioActionPerformed
        InserirFuncionarioGUI ifg = new InserirFuncionarioGUI(modelo);

        ifg.setLocationRelativeTo(null);
        ifg.setVisible(true);
    }//GEN-LAST:event_btInserirFuncionarioActionPerformed

    private void btEditarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarFuncionarioActionPerformed
        int linhaSelecionada = -1;
        linhaSelecionada = tabela.getSelectedRow();
        if (linhaSelecionada >= 0) {
            int idFuncionario = (int) tabela.getValueAt(linhaSelecionada, 0);
            FuncionarioController fc = new FuncionarioController();
            InserirFuncionarioGUI ing = new InserirFuncionarioGUI(modelo, linhaSelecionada, idFuncionario);
            ing.setVisible(true);


        } else {
            JOptionPane.showMessageDialog(null, "É necessário selecionar uma linha");
        }
    }//GEN-LAST:event_btEditarFuncionarioActionPerformed

    private void btExcluirFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirFuncionarioActionPerformed
        Funcionario fun = new Funcionario();
        int linhaSelecionada = -1;
        linhaSelecionada = tabela.getSelectedRow();
        if (linhaSelecionada >= 0) {
            int idFuncionario = (int) tabela.getValueAt(linhaSelecionada, 0);
            fun.setCod(idFuncionario);
            FuncionarioController fc = new FuncionarioController();
            if (fc.excluir(idFuncionario)) {

                modelo.removeRow(linhaSelecionada);
            }



        } else {
            JOptionPane.showMessageDialog(null, "É necessário selecionar uma linha");
        }

    }//GEN-LAST:event_btExcluirFuncionarioActionPerformed

    private void txPesquisarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txPesquisarFuncionarioActionPerformed
        FuncionarioController fc = new FuncionarioController();
        modelo.setNumRows(0);
        for (Funcionario fun : fc.pesquisarNome(txPesquisarFuncionario.getText())) {
            modelo.addRow(new Object[]{fun.getCod(), fun.getNome(), fun.getEmail(), fun.getTelefone()});
        }
    }//GEN-LAST:event_txPesquisarFuncionarioActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEditarFuncionario;
    private javax.swing.JButton btExcluirFuncionario;
    private javax.swing.JButton btInserirFuncionario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane scrollFuncionario;
    private javax.swing.JTextField txPesquisarFuncionario;
    // End of variables declaration//GEN-END:variables

    private void criaJTable() {
        tabela = new JTable(modelo);
        modelo.addColumn("Id");
        modelo.addColumn("Nome");
        modelo.addColumn("Email");
        modelo.addColumn("Telefone");

        preencherJTable();
    }

    private void preencherJTable() {
        FuncionarioController fc = new FuncionarioController();
        for (Funcionario fun : fc.listarFuncionario()) {
            modelo.addRow(new Object[]{fun.getCod(), fun.getNome(), fun.getEmail(), fun.getTelefone()});
        }
    }
}
